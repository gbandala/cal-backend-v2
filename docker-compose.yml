# version: '3.8'

# services:
#   api:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - "8000:8000"
#     env_file:
#       - .env
#     environment:
#       - PORT=${PORT}
#       - DATABASE_URL=${DATABASE_URL}
#       - JWT_SECRET=${JWT_SECRET}
#       - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
#       - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
#       - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
#       - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
#       - FRONTEND_ORIGIN=${FRONTEND_ORIGIN}
#       - FRONTEND_INTEGRATION_URL=${FRONTEND_INTEGRATION_URL}
#       - CALENDAR_CACHE_TTL=${CALENDAR_CACHE_TTL}
#       - AUTO_SYNC_THRESHOLD=${AUTO_SYNC_THRESHOLD}
#       - NODE_ENV=${NODE_ENV}
#     volumes:
#       - ./logs:/app/logs
#       - ./tmp:/app/tmp
#     restart: unless-stopped

version: '3.8'

services:
  # üöÄ SERVICIO PRINCIPAL DE LA API
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: cal-backend-api
    ports:
      - "8000:8000"
    
    # üîß USAR .env.production EN EC2
    env_file:
      - .env.production
    
    # üåç Variables de entorno adicionales
    environment:
      - NODE_ENV=production
      - PORT=8000
      
    # üìÅ Vol√∫menes para persistencia
    volumes:
      - ./logs:/app/logs:rw
      - ./tmp:/app/tmp:rw
    
    # üîÑ Pol√≠tica de reinicio
    restart: unless-stopped
    
    # üîç Health check
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
